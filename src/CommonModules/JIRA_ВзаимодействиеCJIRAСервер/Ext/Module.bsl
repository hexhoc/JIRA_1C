
#region РаботаС_HTTP


Функция ВыполнитьGETЗапрос(URL, ВернутьДвоичныеДанные = Ложь)  Экспорт 
	Перем ssl;
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(URL);
	//Куки =  ОбщегоНазначенияСервер.ПолучитьЗначениеПараметраСеанса("JIRA_Cookies");
	//Если Не ЗначениеЗаполнено(Куки) Тогда
	//	Куки = ВзаимодействиеC_JIRA_КлиентСервер.Авторизоваться();
	//КонецЕсли;
	
	Заголовки = JIRA_ВзаимодействиеCJIRAКлиентСервер.ПолучитьЗаголовки();
	//Заголовки.Вставить("Cookie", Куки);
	
	Если ВРег(СтруктураURI.Схема) = "HTTPS" Тогда
		ssl = Новый ЗащищенноеСоединениеOpenSSL();
	КонецЕсли;
	
	Тело = "";
	ДД = Неопределено;
	ФайлОтвет = ПолучитьИмяВременногоФайла();
	Попытка 
		
		ПараметрыПодключения = ПолучитьПараметрыПодключенияJIRA();
		
		Пароль = ПараметрыПодключения.Пароль;
		Пользователь = ПараметрыПодключения.Пользователь;
		
		HTTPСоединение = Новый HTTPСоединение(СтруктураURI.ИмяСервера,,Пользователь,Пароль,,, ssl);
		HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере, Заголовки);
		Ответ = HTTPСоединение.Получить(HTTPЗапрос, ФайлОтвет);  
		
		// Все двухсотые коды это ОК
		Если Окр(Ответ.КодСостояния,-2) = 200 Тогда 
			Если Не ВернутьДвоичныеДанные Тогда
				HTMLФайл = Новый ТекстовыйДокумент();
				HTMLФайл.Прочитать(ФайлОтвет, КодировкаТекста.UTF8);			
				Тело = HTMLФайл.ПолучитьТекст(); 
			Иначе
				ДД = Новый ДвоичныеДанные(ФайлОтвет);
			КонецЕсли;
		Иначе
			АнализФайлаОтвета(Неопределено, ФайлОтвет, Ответ.КодСостояния);
		КонецЕсли;
		
		УдалитьФайлы(ФайлОтвет);
	Исключение
		УдалитьФайлы(ФайлОтвет);
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат ?(ВернутьДвоичныеДанные, ДД, Тело);
КонецФункции

#endregion

Функция ПолучитьПараметрыПодключенияJIRA() экспорт
	
	НаборЗаписейНастроек = РегистрыСведений.JIRA_ПараметрыПодключения.СрезПоследних(ТекущаяДата());
	
	Если НаборЗаписейНастроек.Количество() = 0 Тогда
		ВызватьИсключение "Не заполнены параметры подключения к JIRA";
	КонецЕсли;
	
	ПараметрыПодключения = Новый Структура("Протокол,АдресСервера,Пользователь,Пароль");
	ЗаполнитьЗначенияСвойств(ПараметрыПодключения,НаборЗаписейНастроек[0]); 
	
	Возврат ПараметрыПодключения;
	
КонецФункции

Процедура АнализФайлаОтвета(АдресХранилища, ПутьНаСервере, КодСостояния) Экспорт 
	ФайлОтвет = ?(ПутьНаСервере = Неопределено, ПолучитьИмяВременногоФайла(), ПутьНаСервере);
	Попытка
		Если АдресХранилища <> Неопределено Тогда
			ДД = ПолучитьИзВременногоХранилища(АдресХранилища);
			ДД.Записать(ФайлОтвет);
		КонецЕсли;
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент();
		ТекстовыйДокумент.Прочитать(ФайлОтвет, КодировкаТекста.UTF8);
		Тело = ТекстовыйДокумент.ПолучитьТекст(); 
		Если Не ЗначениеЗаполнено(Тело) Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер._СтрШаблон("Код ответа ""%1"". Не удалось определить ошибку, файл ответа пуст.", КодСостояния);	
		КонецЕсли;
		
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(Тело);
		ОтветОбъект = ПрочитатьJSON(ЧтениеJSON, Истина);
		ЧтениеJSON.Закрыть();
		
		МассивОшибок = ОтветОбъект["errorMessages"];
		Если МассивОшибок <> Неопределено Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер._СтрШаблон("Код ответа ""%1"". Ошибки:
			|%2", КодСостояния, СтроковыеФункцииКлиентСервер._СтрСоединить(МассивОшибок, Символы.ПС));
		Иначе
			ВызватьИсключение СтроковыеФункцииКлиентСервер._СтрШаблон("Код ответа ""%1"". Не удалось определить ошибку.", КодСостояния);
		КонецЕсли;
		
		УдалитьФайлы(ФайлОтвет);
	Исключение
		УдалитьФайлы(ФайлОтвет);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

//Процедура ОбновитьДанныеЗадач(НомераЗадачСтрокой) Экспорт 
//	Справочники.Задачи.ОбновитьЗадачи(НомераЗадачСтрокой);
//КонецПроцедуры

Функция ПолучитьДанныеПользователяДляОтправки(ПользовательСсылка) Экспорт 
	
	Возврат Новый Структура("key,name", ПользовательСсылка.Наименование, ПользовательСсылка.Наименование);

КонецФункции
